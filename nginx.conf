user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # First Application Server Blocks (existing)
    server {
        listen 80;
        server_name csort-coffee-bot.ru;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name csort-coffee-bot.ru;
        
        ssl_certificate /etc/letsencrypt/live/csort-coffee-bot.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/csort-coffee-bot.ru/privkey.pem;
        
        # Add SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Increase buffer size for file uploads
        client_body_buffer_size 128k;
        client_max_body_size 100M;

        location / {
            proxy_pass http://flask_app:5001;

            # Basic proxy settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_cache_bypass $http_upgrade;

            # Increased timeouts for long transcriptions
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Error handling
            proxy_intercept_errors on;
            error_page 502 = @backend_down;
        }

        # Fallback location for backend errors
        location @backend_down {
            return 502 '{"error": "Backend service temporarily unavailable"}';
            add_header Content-Type application/json;
        }
    }

    # Second Application Server Blocks (new)
    server {
        listen 80;
        server_name your-second-domain.ru;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name your-second-domain.ru;

        ssl_certificate /etc/letsencrypt/live/your-second-domain.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-second-domain.ru/privkey.pem;

        # Copy SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        location /test/ {
            proxy_pass http://flask_app:5001;

            # Basic proxy settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Maximum upload size
            client_max_body_size 100M;

            # Error handling
            proxy_intercept_errors on;
            error_page 502 = @backend_down;
        }

        # Fallback location for backend errors
        location @backend_down {
            return 502 '{"error": "Backend service temporarily unavailable"}';
            add_header Content-Type application/json;
        }
    }
} 